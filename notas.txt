DOM: Al escribir el codigo html lo pasamos al navegador pero este no lo entiende, así que este debe de traducirlo a objetos que son entendibles para este y lo pueda pintar.

Transformacion de codigo html a objetos para poder leerlo en el navegador.

CSSOM: Representacion de objetos, pero de css.

RENDER TREE: Arbol, de DOM y CSSOM juntos para poder renderizarlos y mostrarlos en el navegador.

-----------------------------------------------
BYTES.
CHARACTERS.
TOKENS.
NODES. (OBJETOS)
DOM.
----------------------------------------------- 
PASOS.
1-Proceso de html y construye el dom
2-Proceso de css y constriye el cssom
3-Une ambos
4-Ejecuta el diseño del render tree
5-Pinta el nodo en la pantalla

------------------------------------------------------

arquitecturas de css

objetivos:
predecible
reutilizable
mantenible
escalable

buenas practicas:
Establecer reglas
Explicar la estructura base
Establecer estándares de codificación
Evitar largas hojas de estilo
Documentación

------------------------------------------------------

OOCSS : CSS ORIENTADO A OBJETO
Separa el diseño del contenido

BEM: Bloque elemento y modificador

SMACSS:
1-Divide nuestro css en componentes bases
2-Layout, elementos que se utilizan en la pagina solo una vez
3-Modulos, elementos que se utilizan en la pagina mas de una vez
4-Estados
5-Temas

ITCSS: Triangulo invertido de css
Divide nuestros archivos de css en ciertas partes para que no se mezclen entre si.

Atomic Design:
Los separo en atomos, moleculas, organismos, templates y paginas completas.
